{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$BOARD_SIZE = 4;\nvar $3d28d7f1aac198f5$var$WIN_TILE = 2048;\nfunction $3d28d7f1aac198f5$var$deepClone(arr) {\n    return arr.map(function(item) {\n        return Array.isArray(item) ? $3d28d7f1aac198f5$var$deepClone(item) : item;\n    });\n}\nvar $3d28d7f1aac198f5$export$2e2bcd8739ae039 = /*#__PURE__*/ function() {\n    function Game() {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = Array.from({\n            length: $3d28d7f1aac198f5$var$BOARD_SIZE\n        }, function() {\n            return Array($3d28d7f1aac198f5$var$BOARD_SIZE).fill(0);\n        });\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return $3d28d7f1aac198f5$var$deepClone(this.board);\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                var hasEmpty = false;\n                var hasMoves = false;\n                for(var row = 0; row < $3d28d7f1aac198f5$var$BOARD_SIZE; row++)for(var col = 0; col < $3d28d7f1aac198f5$var$BOARD_SIZE; col++){\n                    var cell = this.board[row][col];\n                    if (cell === $3d28d7f1aac198f5$var$WIN_TILE) return this.status = \"win\";\n                    if (cell === 0) hasEmpty = true;\n                    if (col < $3d28d7f1aac198f5$var$BOARD_SIZE - 1 && cell === this.board[row][col + 1] || row < $3d28d7f1aac198f5$var$BOARD_SIZE - 1 && cell === this.board[row + 1][col]) hasMoves = true;\n                }\n                if (hasEmpty || hasMoves) return this.status = \"playing\";\n                return this.status = \"lose\";\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var row = 0; row < $3d28d7f1aac198f5$var$BOARD_SIZE; row++){\n                    for(var col = 0; col < $3d28d7f1aac198f5$var$BOARD_SIZE; col++)if (this.board[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], emptyRow = _emptyCells_Math_floor.row, emptyCol = _emptyCells_Math_floor.col;\n                this.board[emptyRow][emptyCol] = Math.random() < 0.9 ? 2 : 4;\n                this.newTiles = [\n                    {\n                        row: emptyRow,\n                        col: emptyCol\n                    }\n                ];\n            }\n        },\n        {\n            key: \"shiftAndCombine\",\n            value: function shiftAndCombine(arr) {\n                var rowIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, isCol = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n                var filtered = arr.filter(function(num) {\n                    return num !== 0;\n                });\n                var merged = [];\n                for(var i = 0; i < filtered.length - 1; i++)if (filtered[i] === filtered[i + 1]) {\n                    filtered[i] *= 2;\n                    this.score += filtered[i];\n                    filtered[i + 1] = 0;\n                    if (rowIndex !== null) {\n                        if (isCol) merged.push({\n                            row: i,\n                            col: rowIndex\n                        });\n                        else merged.push({\n                            row: rowIndex,\n                            col: i\n                        });\n                    }\n                }\n                filtered = filtered.filter(function(num) {\n                    return num !== 0;\n                });\n                while(filtered.length < $3d28d7f1aac198f5$var$BOARD_SIZE)filtered.push(0);\n                this.mergedTiles = (this.mergedTiles || []).concat(merged);\n                return filtered;\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                var _this = this;\n                if (this.status === \"idle\") return;\n                var changed = false;\n                var board = $3d28d7f1aac198f5$var$deepClone(this.board);\n                this.newTiles = [];\n                this.mergedTiles = [];\n                var getCol = function(col) {\n                    return _this.board.map(function(row) {\n                        return row[col];\n                    });\n                };\n                var setCol = function(colIndex, newCol) {\n                    return newCol.forEach(function(val, row) {\n                        return _this.board[row][colIndex] = val;\n                    });\n                };\n                for(var i = 0; i < $3d28d7f1aac198f5$var$BOARD_SIZE; i++){\n                    var line = void 0;\n                    switch(direction){\n                        case \"left\":\n                            line = this.board[i];\n                            line = this.shiftAndCombine(line, i, false);\n                            this.board[i] = line;\n                            break;\n                        case \"right\":\n                            line = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.board[i]).reverse();\n                            line = this.shiftAndCombine(line, i, false).reverse();\n                            this.board[i] = line;\n                            break;\n                        case \"up\":\n                            line = getCol(i);\n                            line = this.shiftAndCombine(line, i, true);\n                            setCol(i, line);\n                            break;\n                        case \"down\":\n                            line = getCol(i).reverse();\n                            line = this.shiftAndCombine(line, i, true).reverse();\n                            setCol(i, line);\n                            break;\n                    }\n                    if (!changed && board[i].join() !== this.board[i].join()) changed = true;\n                }\n                if (changed) this.addRandomTile();\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.board = Array.from({\n                    length: $3d28d7f1aac198f5$var$BOARD_SIZE\n                }, function() {\n                    return Array($3d28d7f1aac198f5$var$BOARD_SIZE).fill(0);\n                });\n                this.score = 0;\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = Array.from({\n                    length: $3d28d7f1aac198f5$var$BOARD_SIZE\n                }, function() {\n                    return Array($3d28d7f1aac198f5$var$BOARD_SIZE).fill(0);\n                });\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        }\n    ]);\n    return Game;\n}();\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039)();\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$restartButton = document.querySelector(\".button.restart\");\nfunction $197cd56b15c33885$var$renderBoard() {\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n    if ($197cd56b15c33885$var$game.status === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.status === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$game.board.forEach(function(row, rowIndex) {\n        row.forEach(function(cell, colIndex) {\n            var cellElement = $197cd56b15c33885$var$cells[rowIndex * 4 + colIndex];\n            cellElement.textContent = cell !== 0 ? cell : \"\";\n            cellElement.className = \"field-cell\";\n            if (cell !== 0) {\n                var _game_newTiles, _game_mergedTiles;\n                cellElement.classList.add(\"field-cell--\".concat(cell));\n                if ((_game_newTiles = $197cd56b15c33885$var$game.newTiles) === null || _game_newTiles === void 0 ? void 0 : _game_newTiles.some(function(t) {\n                    return t.row === rowIndex && t.col === colIndex;\n                })) {\n                    cellElement.classList.add(\"new\");\n                    cellElement.addEventListener(\"animationend\", function() {\n                        cellElement.classList.remove(\"new\");\n                    }, {\n                        once: true\n                    });\n                }\n                if ((_game_mergedTiles = $197cd56b15c33885$var$game.mergedTiles) === null || _game_mergedTiles === void 0 ? void 0 : _game_mergedTiles.some(function(t) {\n                    return t.row === rowIndex && t.col === colIndex;\n                })) {\n                    cellElement.classList.add(\"merged\");\n                    cellElement.addEventListener(\"animationend\", function() {\n                        cellElement.classList.remove(\"merged\");\n                    }, {\n                        once: true\n                    });\n                }\n            }\n        });\n    });\n}\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$restartButton.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$startButton.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    $197cd56b15c33885$var$renderBoard();\n});\n$197cd56b15c33885$var$restartButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$restartButton.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startButton.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$renderBoard();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    var directions = {\n        ArrowLeft: \"left\",\n        ArrowRight: \"right\",\n        ArrowUp: \"up\",\n        ArrowDown: \"down\"\n    };\n    if (directions[e.key]) {\n        $197cd56b15c33885$var$game.move(directions[e.key]);\n        $197cd56b15c33885$var$renderBoard();\n        $197cd56b15c33885$var$game.getStatus();\n    }\n});\n\n})();\n//# sourceMappingURL=index.37e4406c.js.map\n","'use strict';\n\nimport Game from '../modules/Game.class.js';\n\nconst game = new Game();\nconst scoreElement = document.querySelector('.game-score');\nconst cells = document.querySelectorAll('.field-cell');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst startButton = document.querySelector('.button.start');\nconst restartButton = document.querySelector('.button.restart');\n\nfunction renderBoard() {\n  scoreElement.textContent = game.getScore();\n\n  if (game.status === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n\n  if (game.status === 'win') {\n    messageWin.classList.remove('hidden');\n  }\n\n  game.board.forEach((row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      const cellElement = cells[rowIndex * 4 + colIndex];\n\n      cellElement.textContent = cell !== 0 ? cell : '';\n      cellElement.className = 'field-cell';\n\n      if (cell !== 0) {\n        cellElement.classList.add(`field-cell--${cell}`);\n\n        if (\n          game.newTiles?.some((t) => t.row === rowIndex && t.col === colIndex)\n        ) {\n          cellElement.classList.add('new');\n\n          cellElement.addEventListener(\n            'animationend',\n            () => {\n              cellElement.classList.remove('new');\n            },\n            { once: true },\n          );\n        }\n\n        if (\n          game.mergedTiles?.some(\n            (t) => t.row === rowIndex && t.col === colIndex,\n          )\n        ) {\n          cellElement.classList.add('merged');\n\n          cellElement.addEventListener(\n            'animationend',\n            () => {\n              cellElement.classList.remove('merged');\n            },\n            { once: true },\n          );\n        }\n      }\n    });\n  });\n}\n\nstartButton.addEventListener('click', () => {\n  game.start();\n  restartButton.classList.remove('hidden');\n  startButton.classList.add('hidden');\n  messageStart.classList.add('hidden');\n  renderBoard();\n});\n\nrestartButton.addEventListener('click', () => {\n  game.restart();\n  restartButton.classList.add('hidden');\n  startButton.classList.remove('hidden');\n  messageStart.classList.remove('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n\n  renderBoard();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  const directions = {\n    ArrowLeft: 'left',\n    ArrowRight: 'right',\n    ArrowUp: 'up',\n    ArrowDown: 'down',\n  };\n\n  if (directions[e.key]) {\n    game.move(directions[e.key]);\n    renderBoard();\n    game.getStatus();\n  }\n});\n","'use strict';\n\nconst BOARD_SIZE = 4;\nconst WIN_TILE = 2048;\n\nfunction deepClone(arr) {\n  return arr.map((item) => (Array.isArray(item) ? deepClone(item) : item));\n}\n\nexport default class Game {\n  constructor() {\n    this.board = Array.from({ length: BOARD_SIZE }, () => {\n      return Array(BOARD_SIZE).fill(0);\n    });\n\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  getState() {\n    return deepClone(this.board);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    let hasEmpty = false;\n    let hasMoves = false;\n\n    for (let row = 0; row < BOARD_SIZE; row++) {\n      for (let col = 0; col < BOARD_SIZE; col++) {\n        const cell = this.board[row][col];\n\n        if (cell === WIN_TILE) {\n          return (this.status = 'win');\n        }\n\n        if (cell === 0) {\n          hasEmpty = true;\n        }\n\n        if (\n          (col < BOARD_SIZE - 1 && cell === this.board[row][col + 1]) ||\n          (row < BOARD_SIZE - 1 && cell === this.board[row + 1][col])\n        ) {\n          hasMoves = true;\n        }\n      }\n    }\n\n    if (hasEmpty || hasMoves) {\n      return (this.status = 'playing');\n    }\n\n    return (this.status = 'lose');\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < BOARD_SIZE; row++) {\n      for (let col = 0; col < BOARD_SIZE; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const { row: emptyRow, col: emptyCol } =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[emptyRow][emptyCol] = Math.random() < 0.9 ? 2 : 4;\n    this.newTiles = [{ row: emptyRow, col: emptyCol }];\n  }\n\n  shiftAndCombine(arr, rowIndex = null, isCol = false) {\n    let filtered = arr.filter((num) => num !== 0);\n    const merged = [];\n\n    for (let i = 0; i < filtered.length - 1; i++) {\n      if (filtered[i] === filtered[i + 1]) {\n        filtered[i] *= 2;\n        this.score += filtered[i];\n        filtered[i + 1] = 0;\n\n        if (rowIndex !== null) {\n          if (isCol) {\n            merged.push({ row: i, col: rowIndex });\n          } else {\n            merged.push({ row: rowIndex, col: i });\n          }\n        }\n      }\n    }\n\n    filtered = filtered.filter((num) => num !== 0);\n\n    while (filtered.length < BOARD_SIZE) {\n      filtered.push(0);\n    }\n\n    this.mergedTiles = (this.mergedTiles || []).concat(merged);\n\n    return filtered;\n  }\n\n  move(direction) {\n    if (this.status === 'idle') {\n      return;\n    }\n\n    let changed = false;\n    const board = deepClone(this.board);\n\n    this.newTiles = [];\n    this.mergedTiles = [];\n\n    const getCol = (col) => this.board.map((row) => row[col]);\n    const setCol = (colIndex, newCol) =>\n      newCol.forEach((val, row) => (this.board[row][colIndex] = val));\n\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      let line;\n\n      switch (direction) {\n        case 'left':\n          line = this.board[i];\n          line = this.shiftAndCombine(line, i, false);\n          this.board[i] = line;\n          break;\n        case 'right':\n          line = [...this.board[i]].reverse();\n          line = this.shiftAndCombine(line, i, false).reverse();\n          this.board[i] = line;\n          break;\n        case 'up':\n          line = getCol(i);\n          line = this.shiftAndCombine(line, i, true);\n          setCol(i, line);\n          break;\n        case 'down':\n          line = getCol(i).reverse();\n          line = this.shiftAndCombine(line, i, true).reverse();\n          setCol(i, line);\n          break;\n      }\n\n      if (!changed && board[i].join() !== this.board[i].join()) {\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      this.addRandomTile();\n    }\n  }\n\n  start() {\n    this.board = Array.from({ length: BOARD_SIZE }, () => {\n      return Array(BOARD_SIZE).fill(0);\n    });\n    this.score = 0;\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  restart() {\n    this.board = Array.from({ length: BOARD_SIZE }, () => {\n      return Array(BOARD_SIZE).fill(0);\n    });\n    this.score = 0;\n    this.status = 'idle';\n  }\n}\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$3d28d7f1aac198f5$var$deepClone","map","item","isArray","$197cd56b15c33885$var$game","protoProps","Game","instance","Constructor","TypeError","board","from","fill","score","status","key","value","hasEmpty","hasMoves","row","col","cell","$3d28d7f1aac198f5$var$BOARD_SIZE","emptyCells","push","_emptyCells_Math_floor","Math","floor","random","emptyRow","emptyCol","newTiles","rowIndex","arguments","isCol","filtered","filter","num","merged","mergedTiles","concat","direction","_this","changed","getCol","setCol","colIndex","newCol","forEach","val","line","shiftAndCombine","iter","Symbol","iterator","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","reverse","join","addRandomTile","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$scoreElement","document","querySelector","$197cd56b15c33885$var$cells","querySelectorAll","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$restartButton","$197cd56b15c33885$var$renderBoard","textContent","getScore","classList","remove","_game_newTiles","_game_mergedTiles","cellElement","className","add","some","t","addEventListener","once","start","restart","e","directions","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","move","getStatus"],"version":3,"file":"index.37e4406c.js.map"}